@model UserProfileVM
@using DevinSite.Util
@{
    ViewData["Title"] = "Home";
    DateTime[] calDates = CalendarHelpers.GetThisWeek();
    Model.DisplayedAssignment ??= new();
    Model.DisplayedAssignment.GetCourse ??= new();
    Model.GetAssignments ??= new() { Model.DisplayedAssignment };

}
<div class="vstack gap-3 section-b">
    <div class="hstack gap-2">
        <div class="assignment-wrap">
            <div class="btn-group container-sm mt-4" id="subject-buttons" data-bs-toggle="collapse">
                <a href="#" class="btn btn-primary btn" id="subject-1">Course 1</a>
                <a href="#" class="btn btn-primary btn" id="subject-2">Course 2</a>
                <a href="#" class="btn btn-primary btn" id="subject-3">Course 3</a>
                <a href="#" class="btn btn-primary btn" id="subject-4">Course 4</a>
            </div>
            <a class="btn btn-danger rounded" asp-controller="Home" asp-action="RemoveAllAssignments">Delete All</a>
            <a class="btn btn-warning rounded" asp-controller="Home" asp-action="RefreshFromMoodle">Update from Moodle</a>
            <div>
                <div id="calendar-wrap">
                    <div class="calendar__date">
                        <a asp-controller="Home" asp-action="Index" asp-route-searchString="@calDates[0].Date" class="calendar__number">Sun</a>
                        <a asp-controller="Home" asp-action="Index" asp-route-searchString="@calDates[1].Date" class="calendar__number">Mon</a>
                        <a asp-controller="Home" asp-action="Index" asp-route-searchString="@calDates[2].Date" class="calendar__number">Tue</a>
                        <a asp-controller="Home" asp-action="Index" asp-route-searchString="@calDates[3].Date" class="calendar__number">Wed</a>
                        <a asp-controller="Home" asp-action="Index" asp-route-searchString="@calDates[4].Date" class="calendar__number">Thu</a>
                        <a asp-controller="Home" asp-action="Index" asp-route-searchString="@calDates[5].Date" class="calendar__number">Fri</a>
                        <a asp-controller="Home" asp-action="Index" asp-route-searchString="@calDates[6].Date" class="calendar__number">Sat</a>
                    </div>
                </div>
            </div>
            <div id="search-title" class="d-flex">
                <form class="form-inline" asp-controller="Home" asp-action="Index">
                    Title:
                    <input type="search" name="searchString" />
                    <input type="submit" value="filter" class="btn btn-secondary rounded-pill mx-3" />
                </form>
                <form class="form-inline" asp-controller="Home" asp-action="Index">
                    <p>
                        Due Date:
                        <input type="date" name="searchString" />
                        <input type="submit" value="search" class="btn btn-info rounded-pill mx-3" />
                    </p>
                </form>
                <form class="form-inline" asp-controller="Home" asp-action="Index">
                    <input type="submit" value="Show All" class="btn btn-primary rounded mx-3" />
                </form>
            </div>

            <div class="assignments container">

                @foreach (var assignment in Model.GetAssignments)
                {
                    <div class="assmt-card d-flex">
                        <div class="assignment-title">@assignment.Title</div>
                        <!-- <a class="mx-4" asp-action="RemoveAssignment" asp-controller="Home" asp-route-id="@assignment.AssignmentId"><i class="bi bi-trash"></i></a> -->
                        <a asp-action="SelectAssignment" asp-controller="Home" asp-route-id="@assignment.AssignmentId">
                            <i class="bi bi-caret-right"></i>
                        </a>
                    </div>
                }


            </div>
        </div>
        <div class="container w-50 h-50 bg-light">
            @if (@Model.DisplayedAssignment.AssignmentId != 0)
            {
                @Html.DisplayFor(u => u.DisplayedAssignment)

                <form asp-action="UpdateNotes" asp-controller="Notes">
                    <input hidden asp-for="DisplayedAssignment!.AssignmentId" value="@Model.DisplayedAssignment!.AssignmentId" />
                    <input hidden asp-for="DisplayedAssignment!.Title" value="@Model.DisplayedAssignment!.Title" />
                    <input hidden asp-for="DisplayedAssignment!.Details" value="@Model.DisplayedAssignment!.Details" />
                    <input hidden asp-for="DisplayedAssignment!.DueDate" value="@Model.DisplayedAssignment!.DueDate" />
                    <textarea asp-for="DisplayedAssignment!.Notes.Body"></textarea>
                    <input type="submit" class="btn btn-success rounded" />
                </form>
                <a asp-action="DeleteNotes" asp-controller="Notes" asp-route-id="@Model.DisplayedAssignment.Notes.NoteId"><i class="bi bi-trash"></i></a>
            }
            @if (!@Model.GetStudent.MoodleIsSet)
            {
                <p><b><em>Set your connection to moodle <a asp-action="Index" asp-controller="Account">here</a></em></b></p>
            }
        </div>
    </div>
</div>