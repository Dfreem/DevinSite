@using System.Globalization
@model UserProfileVM
@*@inject SignInManager<Student> signInManager*@
@{
    ViewData["Title"] = "User Profile";
}

<div class=" m-5">
    <h5>Setting A New Moodle Connection</h5>
    <ol >
        <li>Login to your Moodle student account</li>
        <li>Immidiatly after login, you should be able to locate your profile icon at the top right of the page and it is labeld 'My Courses', click MyCourses..</li>
        <li>On this page, you should be able to see your name and a few navigation icons directly under it. Click on dashboard.</li>
        <li>on your dashboard page, find the calendar and the section labeled 'Upcoming Events'. At the bottom, click Go to calendar</li>
        <li>on the calendar page, select either week or month view. Then at the bottom of the calendar, click Export Calendar.</li>
        <li>Now select show all events and this or next week if available</li>
        <li>push "Get Calendar URL"</li>
        <li>copy the URL that is generated into the text feild below labeled Moodle Calendar and hit save.</li>
    </ol>
    Now when you navigate back to the main page, you will be able to update your calendar by hitting the yellow button.
    <table class="table profile-table">
        <thead>
            <tr>
                <th class="table-active">
                    User:
                </th>
                <th class="table-secondary">
                    <input type="text" asp-for="@Model.Name" value="@Model.Name" />
                </th>
                <th class="table-secondary">
                    <form asp-action="SetMoodleString">
                        <label asp-for="@Model.NewMoodle">
                            Moodle Connection
                        </label>
                        <input type="hidden" value="@Model.Id" />
                        <input asp-for="@Model.NewMoodle" />
                        <input type="submit" value="save calendar URL">
                    </form>
                </th>
            </tr>
            <tr>
                <td>
                    User Name
                </td>
                <td>
                    @Model.UserName
                </td>
            </tr>
            <tr>
                <td>
                    e-mail
                </td>
                <td>
                    @Model.Email
                </td>
            </tr>
            <tr>
                <td>
                    last assignment update
                </td>
                <td>
                    @Model.LastUpdate.ToString(CultureInfo.CurrentCulture);
                </td>
            </tr>
    </table>
</div>
@* ReSharper disable once Mvc.ActionNotResolved *@
<form asp-action="ChangePasswordAsync" asp-controller="Account">
    <div class="d-flex">
        <label asp-for="@Model.Password">Current password</label>
        <input type="password" asp-for="@Model.Password" />
        <label asp-for="@Model.NewPassword">New password</label>
        <input type="password" asp-for="@Model.Password" />
        <label asp-for="@Model.ConfirmPassword">Confirm new Password</label>
        <input type="password" asp-for="@Model.ConfirmPassword" />
        <input type="submit" value="Change Password" />
    </div>
</form>
